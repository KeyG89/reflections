* When would you want to create a remote repository rather than keeping all your work local?

- I would rather keep a remote repository in case of collaboration or working remotly from another computer.

* Why might you want to always pulll changes manually rather than having Git automatically stay up-to-date with your remote repository?

- Because I want to be sure, that my remote repository has only 100% valid code. Place for expermental changes and adding new features, fixing bugs, till are completely finished is on my local repository.

* Describe the differences between forks, clones, and branches. When would you use one instead of another.

- Fork - is used to get an existing repository from github to your github account as a separated repo

- Clone - is used to get repo from github repository to your local machine

- Branch - is used to branch ;)

* What is the benefit of having a copy of the last known state of the remote stored locally?

fast forward merging?

* How would you collaborate without using Git or GitHub? Wat would be easier, and what would be harder.

- collaboration through working in the same place, at the same time, easier to communicate about conflicts, harder in case of working in other place in another time

* When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When I would be collaborating with other people and it would be a huge benefit. 

Commands:

git remote  |    Show all remote locations for the repository
git remote add origin url |     Add a new remote location for the repository. Origin is the default name to use when you create only one remote location. Url should be the https url to the github repository.
git remove -v  |    Outputs the remote locations with verbose information (fetch and push urls)
git push origin master  |    Push the master branch to the remote location origin.
git pull origin master  |    Get the master branch from the remote location origin.
git pull origin master  |    = Git fetch origin + git merge master origin/master
git fetch origin | Get the changes from the remote location into the (hidden?) origin/master branch